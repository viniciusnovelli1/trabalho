#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "trabalho.h"

void crialista(Lista *L){
  L->inilista = NULL;
  L->fimlista = NULL;
}

void criapilha(Pilha *P){
  P->topo = NULL;
}

void criafila(Fila *F){
  F->inifila = NULL;
  F->fimfila = NULL;
}

void cadastrarproduto(Lista *L, char *nome, int *erro){
  nolista *li = (nolista *)malloc(sizeof(nolista));
  nolista *aux = L->inilista;
  int ordnome = -1;
  
  if(li == NULL){
    *erro = 1;
    return;
  } else {
    strcpy(li->nomeproduto,nome);
    if(L->inilista == NULL){
      L->inilista = li;
      L->fimlista = li;
      li->prox = NULL;
      li->ant = NULL;
      return;
    } else {
      while(ordnome < 0){
	ordnome = strcmp(aux->nomeproduto,li->nomeproduto);
	if(ordnome > 0){
	  ordnome = 1;
	  break;
	}
	if(aux->prox == NULL){
	  ordnome = 2;
	  break;
	}
	aux = aux->prox;
      }      
      if(ordnome == 0){
      	*erro = 2;
      	return;
      } else {
	*erro = 0;
	if(L->inilista == aux && ordnome == 1){
	  L->inilista = li;
	  li->prox = aux;
	  aux->ant = li;
	  li->ant = NULL;
	} else {
	  if(ordnome == 2){
	    li->prox = NULL;
	    li->ant = aux;
	    aux->prox = li;
	    L->fimlista = li;
	  }
	  if(ordnome == 1){
	    li->prox = aux;
	    li->ant = aux->ant;
	    aux->ant->prox = li;
	    aux->ant = li;
	  }
	}
      }
    }
  }
}

void Push(Pilha *P, float *valor, int *erro){
  nopilha *pi = (nopilha *)malloc(sizeof(nopilha));

  if(pi == NULL){
    *erro = 1;
    return;
  } else {
    *erro = 0;
    pi->valor = *valor;
    pi->users = NULL;
    pi->prox = P->topo;
    P->topo = pi;
    return;
  }
}

void Pop(Pilha *P, float *valor, int *erro){
  nopilha *pi = P->topo;

  if(P->topo == NULL){
    *erro = 1;
  } else {
    *erro = 0;
    *valor = P->topo->valor;
    P->topo = P->topo->prox;
    free(pi);
  }
}

void EntraFila(Fila *F, char *nome, int *erro){
  nofila *fi = (nofila *)malloc(sizeof(nofila));

  if(fi == NULL){
    *erro = 1;
  } else {
    *erro = 0;
    strcpy(fi->nomepessoa, nome);
    fi->fprox = NULL;
    if(F->inifila == NULL){
      F->inifila = fi;
      F->fimfila = fi;
    } else {
      F->fimfila->fprox = fi;
      F->fimfila = fi;
    }
  }
}

void EsvaziaFila(Fila *F){
  nofila *fi = F->inifila;

  while(fi != NULL){
    F->inifila = fi->fprox;
    free(fi);
    fi = F->inifila;
  }
}

void cadastrarlance(Lista *L, char *nome, char *prod, float *valor, int *erro){
  nopilha *pi = (nopilha *)malloc(sizeof(nopilha));
  nofila *fi = (nofila *)malloc(sizeof(nofila));
  nolista *li = L->inilista;
  int ordnome = 1;

  if(pi == NULL || fi == NULL){
    *erro = 1;
    return;
  } else {
    while(ordnome != 0){
      ordnome = strcmp(prod,li->nomeproduto);
      if(li == NULL){
	*erro = 2;
	return;
      }
      li = li->prox;
    }
    *erro = 0;
    if(li->ant->lances == NULL){
    Push(li->ant->lances,valor,erro);
    } else {
      if(li->ant->lances->topo->valor < *valor){
	Push(li->ant->lances,valor,erro);
      } else {
	*erro = 3;
      }
      strcpy(fi->nomepessoa,nome);
      Push(li->ant->lances,valor,erro);
      EntraFila(pi->users,nome,erro);
    }
  }
}

void listalances(Pilha *P){
  nopilha *pi = P->topo;

  if(pi == NULL){
    printf("Nenhum lance cadastrado");
    return;
  } else {

  }
}

void listausers(Fila *F){

}

void listaprodutos(Lista *L){
  nolista *li = L->inilista;

  if(li == NULL){
    printf("Nenhum produto cadastrado.\n");
    return;
  } else {
    while(li != NULL){
      printf("%s\n", li->nomeproduto);
      li = li->prox;
    }
  }
}


void esvaziapilha(Pilha *P){
  nopilha *pi = P->topo;

  while(pi != NULL){
    P->topo = pi->prox;
    free(pi);
    pi = P->topo;
  }
}
